[{"C:\\Users\\Sarah Lauren\\Documents\\dev\\chatapp\\frontend\\src\\components\\Nav.js":"1","C:\\Users\\Sarah Lauren\\Documents\\dev\\chatapp\\frontend\\src\\components\\Join.js":"2","C:\\Users\\Sarah Lauren\\Documents\\dev\\chatapp\\frontend\\src\\components\\Chat.js":"3","C:\\Users\\Sarah Lauren\\Documents\\dev\\chatapp\\frontend\\src\\index.js":"4","C:\\Users\\Sarah Lauren\\Documents\\dev\\chatapp\\frontend\\src\\reportWebVitals.js":"5","C:\\Users\\Sarah Lauren\\Documents\\dev\\chatapp\\frontend\\src\\App.js":"6","C:\\Users\\Sarah Lauren\\Documents\\dev\\chatapp\\frontend\\src\\utils\\ioSocket.js":"7"},{"size":1488,"mtime":1609952906130,"results":"8","hashOfConfig":"9"},{"size":2412,"mtime":1609850307910,"results":"10","hashOfConfig":"9"},{"size":3453,"mtime":1609857145091,"results":"11","hashOfConfig":"9"},{"size":494,"mtime":1608571299146,"results":"12","hashOfConfig":"9"},{"size":375,"mtime":1608571299146,"results":"13","hashOfConfig":"9"},{"size":465,"mtime":1609795835277,"results":"14","hashOfConfig":"9"},{"size":131,"mtime":1609781216368,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uifl7x",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Sarah Lauren\\Documents\\dev\\chatapp\\frontend\\src\\components\\Nav.js",[],"C:\\Users\\Sarah Lauren\\Documents\\dev\\chatapp\\frontend\\src\\components\\Join.js",["31"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport socket from '../utils/ioSocket'; \r\n\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    width: \"100%\", \r\n    height: \"100vh\",\r\n    display: \"flex\", \r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    background: \"linear-gradient(#121317, #323B42)\"\r\n  }, \r\n  form: {\r\n    display: 'flex', \r\n    flexDirection: \"column\", \r\n  }, \r\n  label: {\r\n    fontFamily: \"Roboto\", \r\n    color: \"white\",\r\n    fontSize: \"25px\",\r\n    textAlign: \"center\"\r\n  }, \r\n  input: {\r\n    outline: \"none\", \r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    width: \"200px\",\r\n    height: \"30px\"\r\n  },\r\n  btn: {\r\n    border: 'none',\r\n    background: \"#47d35f\",\r\n    color: \"white\",\r\n    width: \"200px\",\r\n    height:\"30px\",\r\n    borderRadius: \"50px\", \r\n    cursor: \"pointer\",\r\n    marginTop: '15px',\r\n    fontFamily: \"Roboto\", \r\n    outline: \"none\"\r\n  }\r\n}); \r\n\r\n\r\nconst Join = () => {\r\n\r\n  const css = useStyles(); \r\n  const [username, setUsername] = useState(\"\"); \r\n  const [room, setRoom]= useState(''); \r\n  const [listRoom, setListRoom]= useState([]); \r\n\r\n\r\n  useEffect(()=> {\r\n    socket.on('sendRoom', (room) => {\r\n      setListRoom(prev => [...prev, room])\r\n    })\r\n  },[])\r\n \r\n  /* Sending the room chosen to event joinRoom */\r\n\r\n  const sendCurrentRoom = () => {\r\n    socket.emit(\"joinRoom\", parseInt(room))\r\n  }\r\n\r\n  /* flatten the array of room from db at 3 levels */\r\n\r\n  const arr = listRoom.flat(3);\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <form className={css.form}>\r\n        <label className={css.label}> Enter a room id </label>\r\n        <select onChange={(e) => setRoom(e.target.value)}>\r\n          <option selected=\"selected\"></option>\r\n          {arr.map(x => <option value={x.id}>{x.name}</option>)}\r\n        </select>\r\n        <label className={css.label}> username  </label>\r\n        <input className={css.input} type=\"text\" placeholder=\"enter your username\" value={username} onChange={(e) => setUsername(e.target.value)} required/>\r\n        <Link onClick={(e) => (!username || !room) ?  e.preventDefault() : null} \r\n        to={`/chat?room=${room}&username=${username}`} >\r\n          <button  className={css.btn} type=\"submit\">Connection</button>\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Join;","C:\\Users\\Sarah Lauren\\Documents\\dev\\chatapp\\frontend\\src\\components\\Chat.js",[],"C:\\Users\\Sarah Lauren\\Documents\\dev\\chatapp\\frontend\\src\\index.js",[],"C:\\Users\\Sarah Lauren\\Documents\\dev\\chatapp\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Sarah Lauren\\Documents\\dev\\chatapp\\frontend\\src\\App.js",[],"C:\\Users\\Sarah Lauren\\Documents\\dev\\chatapp\\frontend\\src\\utils\\ioSocket.js",[],{"ruleId":"32","severity":1,"message":"33","line":64,"column":9,"nodeType":"34","messageId":"35","endLine":64,"endColumn":24},"no-unused-vars","'sendCurrentRoom' is assigned a value but never used.","Identifier","unusedVar"]